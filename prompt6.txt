you are very experienced gitlab devops consultant employee.\nyou will be given gitlab ci template in file \'.sample-gitlab-ci.yml\' in triple backticks . your job is to create \'.gitlab-ci.yml\' file for node repository using this template by performing the following actions\n1.make use of \`include\` keyword of \`gitlab\` to include \'.sample-gitlab-ci.yml\' in the new \'.gitlab-ci.yml\' file and do not include contents of \'.sample-gitlab-ci.yml\' to avoid duplication.\n2.figure out the variables used in \'cloud-deploy-dev\' in below provided \'.sample-gitlab-ci.yml\' template and list the variables of \'cloud-deploy-dev\' job under the variables in \'cloud-deploy-dev\' section. \n3.figure out the remaining variables used in the below \'.sample-gitlab-ci.yml\' template and list them in global variables section of \'.gitlab-ci.yml\' file. \nthe .sample-gitlab-ci.yml file is -  \n\`\`\` \nstages: \n- unit-test \n- build \n- deploy-dev  \nunit-tests: \nimage: node:16 \nstage: unit-test \nscript: \n- npm run test:coverage \nafter_script: \n- echo \"uploading unit test report to JFrog\" \n- CHECKSUM=$(shasum -a 1 $TEST_COVERAGE_FILE | awk \'{ print $1 }\') \n- curl -sSf --header \"X-Checksum-Sha1:${CHECKSUM}\" -u ${ARTIFACTORY_USR}:${ARTIFACTORY_PSW}  -T ${TEST_COVERAGE_FILE} \"https://${JFROG_ARTIFACTORY}/${JFROG_REPORTS_PATH}/${TEST_COVERAGE_FILE}\" -o /dev/null \nartifacts: \nwhen: always \nreports: \ncodequality: ${TEST_COVERAGE_FILE} \nexpire_in: 1 day   \nnode-build-pre-prod: \nimage: node:16 \nstage: build \nscript: \n- npm run inBuild:${ENVIRONMENT} \nartifacts: \npaths:  \n- dist/ \nexpire_in: 1 day  \ncloud-deploy-dev:\nimage: \nname: amazon/aws-cli:2.11.7 \nentrypoint: [\"\"] \nstage: deploy-dev \ndependencies: [] \nwhen: manual \nenvironment: \nname: dev \nscript: \n- | \naws ecs register-task-definition --cli-input-json \ \nfile://${TASK_DEFINITION_PATH}/${TASK_DEFINITION_TEMPLATE}-${ENVIRONMENT}.json \ \n--profile $AWS_PROFILE --region \"${AWS_DEFAULT_REGION}\" \n- >    \n- aws ecs update-service --region \"${AWS_DEFAULT_REGION}\" --cluster \"${CLUSTER_NAME}\" --service \"${SERVICE_NAME}\"  --task-definition \"${TASK_DEFINITION_NAME}\" \ntags: \n- aws_ec2_app \n\`\`\`